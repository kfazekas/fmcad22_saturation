R = (cutoff: n3, see ex_simpledecentralized_lock_n3_minR_CNF)
1-2,12:
          \forall N1 . \forall N2 . N1 == N2 | ~has_lock(N1) | ~has_lock(N2)
3-11,13-30:
          \forall N1 . \forall N2 . \forall N3 . ~has_lock(N1) | ~message(N2,N3)
31-66:
          \forall S1, D1, S2, D2. ((S1 == S2) & (D1 == D2)) | ~message(S1, D1) | ~message(S2, D2)
67-69:
          \forall N1 . \forall N2 . N1 == N2 | ~start_nodeIS(N1) | ~start_nodeIS(N2)
70:
          \exists N1 . start_nodeIS(N1)
71:
          \exists N1 . \exists N2 . \exists N3 . has_lock(N1) | message(N2,N3)

config1 = (cutoff: n3, see ex_simpledecentralized_lock_n3_conf1_minCNF, manually flipped start_nodeIS(n2) <-> has_lock(n2))
1-9:      \forall N1 . \forall N2 . ~message(N2,N1)
10-12:    \forall N1 . has_lock(N1) | ~start_nodeIS(N1)
13-15:    \forall N1 . \forall N2 . N1 == N2 | ~has_lock(N1) | ~has_lock(N2)
16:       \exists N1 . start_nodeIS(N1)

config2 = (cutoff: n4, see ex_simpledecentralized_lock_n4_conf2_minCNF, manually flipped start_nodeIS(n3) <-> message(n3,n3) and start_nodeIS(n1) <-> message(n1,n1))
1-4:      \forall N1 . ~has_lock(N1)
5-16:     \forall N1 . \forall N2 . N1 == N2 | ~message(N2,N1)
17-20:    \forall N1 . message(N1,N1) | ~start_nodeIS(N1)
21-26:    \forall N1 . \forall N2 . N1 == N2 | ~message(N1,N1) | ~message(N2,N2)
27:       \exists N1 . start_nodeIS(N1)

config3 = (cutoff: n3, see ex_simpledecentralized_lock_n3_conf3_minCNF)
1-3:      \forall N1 . ~has_lock(N1)
4-6:      \forall N1 . ~message(N1,N1)
7-12:     \forall N1 . \forall N2 . N1 == N2 | start_nodeIS(N2) | ~message(N2,N1)
13-15:    \forall N1 . \forall N2 . \forall N3 . N1 == N2 | N1 == N3 | N2 == N3 | ~message(N3,N1) | ~message(N3,N2)
16-18:    \forall N1 . \forall N2 . N1 == N2 | ~start_nodeIS(N1) | ~start_nodeIS(N2)
19:       \exists N1 . \exists N2 . ~(N1 == N2) & message(N1,N2)

config4 = (cutoff: n4, see ex_simpledecentralized_lock_n4_conf4_minCNF)
1-16:     \forall N1 . \forall N2 . ~message(N2,N1)
17-22:    \forall N1 . \forall N2 . N1 == N2 | ~has_lock(N1) | ~has_lock(N2)
23-28:    \forall N1 . \forall N2 . N1 == N2 | ~start_nodeIS(N1) | ~start_nodeIS(N2)
29-32:    \forall N1 . \exists N2 . ( ~(N1 == N2) & ( has_lock(N2) | start_nodeIS(N2) ))

config5 = (cutoff: n3, see ex_simpledecentralized_lock_n3_conf5_minCNF)
1-3:      \forall N1 . ~has_lock(N1)
4-6:      \forall N1 . ~message(N1,N1)
7-12:     \forall N1 . \forall N2 . N1 == N2 | start_nodeIS(N2) | ~message(N1,N2)
13-15:    \forall N1 . \forall N2 . \forall N3 . N1 == N2 | N1 == N3 | N2 == N3 | ~message(N2,N1) | ~message(N3,N1)
16-18:    \forall N1 . \forall N2 . N1 == N2 | ~start_nodeIS(N1) | ~start_nodeIS(N2)
19:       \exists N1 . \exists N2 . ~(N1 == N2) & message(N1,N2)

config6 = (cutoff: n3, see ex_simpledecentralized_lock_n3_conf6_minCNF)
1-3:      \forall N1 . ~has_lock(N1)
4-9:      \forall N1 . \forall N2 . N1 == N2 | ~message(N2,N1)
10-12:    \forall N1 . \forall N2 . N1 == N2 | ~message(N1,N1) | ~message(N2,N2)
13-15:    \forall N1 . \forall N2 . N1 == N2 | ~start_nodeIS(N1) | ~start_nodeIS(N2)
16-18:    \forall N1 . \exists N2 . ( ~(N1 == N2) & (message(N2,N2) | start_nodeIS(N2) ))

config7 = (cutoff: n5, see ex_simpledecentralized_lock_n5_conf7_minCNF)
1-5:      \forall N1 . ~has_lock(N1)
6-10:     \forall N1 . ~message(N1,N1)
11-200:   \forall S1, D1, S2, D2. ((S1 == S2) & (D1 == D2)) | (S1 == D1) | (S2 == D2)) | ~message(S1, D1) | ~message(S2, D2)
201-210:  \forall N1 . \forall N2 . N1 == N2 | ~start_nodeIS(N1) | ~start_nodeIS(N2)
211-215:  \forall N . \exists S . \exists D . (~(N == S) & ~(N == D) & ~(S == D) & message(S,D)) | (~(N == S) & start_nodeIS(S))
